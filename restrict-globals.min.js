var callWithoutGlobals=function(globalsToRestrict,funcToCall,funcArguments,funcThisArg){if(globalsToRestrict.constructor!==Array)throw"must provide array of globals to restrict";if("function"!=typeof funcToCall)throw"Function to call must be a function";if(funcArguments){if(funcArguments.constructor!==Array)throw"Function arguments must be an array"}else funcArguments=[];for(var shadowedVariables=[],commaSeparatedParams="",prefix="",i=0;i<globalsToRestrict.length;i++){var variableToShadow=globalsToRestrict[i];"string"==typeof variableToShadow&&(shadowedVariables.push(eval(variableToShadow)),funcArguments.unshift(void 0),eval("var "+variableToShadow+" = undefined;"),commaSeparatedParams+=prefix+variableToShadow,prefix=", ")}if(0===shadowedVariables.length)return funcToCall.call(funcThisArg,funcArguments);var originalAsString=funcToCall.toString(),newFuncAsString="safeFunction = ",indexOfFuncParamsBeginning=originalAsString.indexOf("(")+1,indexOfFuncParamsEnding=originalAsString.indexOf(")");if(newFuncAsString+=originalAsString.substr(0,indexOfFuncParamsBeginning),indexOfFuncParamsBeginning!==indexOfFuncParamsEnding)for(var funcParams=originalAsString.substring(indexOfFuncParamsBeginning,indexOfFuncParamsEnding).split(","),i=0;i<funcParams.length;i++){var paramValue=funcParams[i].trim();paramValue.length>0&&(commaSeparatedParams+=prefix+paramValue,prefix=",")}return newFuncAsString+=commaSeparatedParams,newFuncAsString+=originalAsString.substr(indexOfFuncParamsEnding),eval(newFuncAsString),funcThisArg||(funcThisArg=funcToCall),safeFunction.apply(funcThisArg,funcArguments)};"undefined"!=typeof module&&"undefined"!=typeof module.exports&&(module.exports=callWithoutGlobals);